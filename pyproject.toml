[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/fora/version.py"
git_describe_command = "git describe --dirty --tags --long --match 'v*' --first-parent"

[tool.twine]
sign = true

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
local_partial_types = true
strict_equality = true
show_error_codes = true
show_traceback = true
pretty = true
no_implicit_reexport = true

[tool.pylint.'MESSAGES CONTROL']
ignore = "version.py"
disable = "fixme, line-too-long, invalid-name, too-many-instance-attributes, too-few-public-methods, too-many-arguments, too-many-locals, duplicate-code"

[tool.coverage.run]
branch = true
source = ["src/fora"]
parallel = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
	'^\s*raise AssertionError\b',
	'^\s*raise NotImplementedError\b',
	'^\s*raise$',
	'^\s*except ModuleNotFoundError:$',
	'^\s*pass$',
	"^if __name__ == ['\"]__main__['\"]:$",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py39,pylint,type,docs,coverage

[testenv]
description = run tests and create coverage data
deps =
	pytest
	coverage[toml]
	pytest-cov
passenv = SSH_AUTH_SOCK
commands = pytest -v --cov={envsitepackagesdir}/fora

[testenv:pylint]
description = check with pylint
deps = pylint
basepython = python3.9
commands = pylint src/fora

[testenv:type]
description = type-check with mypy
deps = mypy
basepython = python3.9
commands = python -m mypy src/fora

[testenv:docs]
description = check if docs can be built
deps = pdoc
basepython = python3.9
extras = docs
commands = python docs/make.py -o {toxworkdir}/docs_build

[testenv:coverage]
description = [run after tests]: combine coverage data and create report
deps = coverage[toml]
skip_install = true
commands =
	coverage html
	coverage report --fail-under=80
"""
